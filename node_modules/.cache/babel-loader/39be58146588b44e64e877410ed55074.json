{"remainingRequest":"/Users/mac/Sites/VUE/exchangeapp-version-control/v1/node_modules/babel-loader/lib/index.js!/Users/mac/Sites/VUE/exchangeapp-version-control/v1/src/api/index.js","dependencies":[{"path":"/Users/mac/Sites/VUE/exchangeapp-version-control/v1/src/api/index.js","mtime":1621631211554},{"path":"/Users/mac/Sites/VUE/exchangeapp-version-control/v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Sites/VUE/exchangeapp-version-control/v1/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/mac/Sites/VUE/exchangeapp-version-control/v1/src/api/index.js"],"names":["require","axios","default","API_KEY","API_KEY_ADDR","ROOT_URL","STRATALY","BLOCKCHAIN","APP_SERVER","module","exports","login","data","post","register","getUserDetails","param","token","window","localStorage","getItem","get","headers","Authorization","response","status","id","getUserBalances","wallet","convertStrataToUsd","amount","convertUsdToStrata","getRates","setItem","JSON","stringify","getWallet","address","getGasFee","sendTransaction","recipient","sender","verifyFlutterTrnx","request","console","log","req_response","tx_ref","then","Number"],"mappings":"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","sourcesContent":["const { default: axios } = require(\"axios\")\n\nconst API_KEY = \"0x5883e0d5f3ed1e2ad14014884f230632f48d5871\";\nconst API_KEY_ADDR = \"1b02af2c11d0c769589fc6cf76e309f7da1d2f08abff09a3ea767d1407ce43df\";\nconst ROOT_URL = {\n    STRATALY:'https://accounts.strata.ly/api',\n    BLOCKCHAIN:'http://157.245.4.9/api',\n    APP_SERVER:'http://64.227.4.126'\n}\n\nmodule.exports = {\n    login(data) {\n        return axios.post(`${ROOT_URL.STRATALY}/login`, data)\n    },\n    register(data) {\n        return axios.post(`${ROOT_URL.STRATALY}/register`, data)\n    },\n    async getUserDetails(param) {\n        const token = param || window.localStorage.getItem('token');\n        const response = await axios.get(`${ROOT_URL.STRATALY}/user`, { \n            headers: { Authorization: `Bearer ${token}` }\n        })\n        const status = response.data.id\n        if (status && status > 0) return response.data;\n        else return false;\n    },\n    async getUserBalances(wallet) {\n        const response = await axios.get(`${ROOT_URL.APP_SERVER}/home/${wallet}`)\n        return response.data;\n    },\n    async convertStrataToUsd(amount) {\n        const response = await axios.get(`${ROOT_URL.STRATALY}/convert/STRLY/${amount}`);\n        return response.data.data;\n    },\n    async convertUsdToStrata(amount) {\n        const response = await axios.get(`${ROOT_URL.STRATALY}/convert/USD/${amount}`);\n        return response.data.data;\n    },\n    async getRates() {\n        const response = await axios.get(`${ROOT_URL.STRATALY}/value`);\n        window.localStorage.setItem('rates', JSON.stringify(response.data.data))\n        return response.data.data\n    },\n    async getWallet(address) {\n        const response = await axios.get(`${ROOT_URL.STRATALY}/wallet/details/${address}`)\n        return response.data.data;\n    },\n    async getGasFee(amount) {\n        const response = await axios.get(`${ROOT_URL.STRATALY}/fees/${amount}`)\n        return response.data.data;\n    },\n    async sendTransaction(data) {\n        const { recipient, amount, sender } = data;\n        const response = await axios.get(`${ROOT_URL.STRATALY}/transfer/${API_KEY}/${sender}/${recipient}/${amount}`)\n        return response.data;\n    },\n    async verifyFlutterTrnx(response, request) {\n        // const req_response = await axios.get(`http://api.flutterwave.com/v3/transactions/${response.transaction_id}/verify`,{\n        //     headers: {\n        //         'Content-Type':'application/json',\n        //         'Authorization':'Bearer FLWSECK-8ea67fd7d97a1cfb6b7f4ab0fb35d0d9-X'\n        //     }\n        // })\n        console.log(req_response);\n        if(response && response.amount == request.amount) {\n            if(response.status == \"successful\") {\n                if(response.tx_ref == request.tx_ref) {\n                    const { recipient } = request\n                    this.convertUsdToStrata(request.amount).then(amount => {\n                        this.sendTransaction({ recipient, amount:Number(amount), sender:API_KEY_ADDR })\n                    })\n                    return 1\n                }else return 0\n            }else return 0\n        }else return 0;\n    }\n}"]}]}